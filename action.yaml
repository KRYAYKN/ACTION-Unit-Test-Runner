name: "AL Unit Test Runner"
description: "Runs AL unit tests on a Business Central container and reports results"

inputs:
  container-name:
    description: "Name of the Business Central container"
    required: true
  BC_USERNAME:
    description: "Business Central username"
    required: true
  BC_PASSWORD:
    description: "Business Central password"
    required: true

runs:
  using: "composite"
  steps:
    - name: Install BcContainerHelper
      shell: powershell
      run: |
        Write-Host "Installing BcContainerHelper module..."
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force
        Install-Module BcContainerHelper -Force -SkipPublisherCheck -AllowClobber
        Get-Module -ListAvailable BcContainerHelper

    - name: Check Container Status
      shell: pwsh
      run: |
        Write-Host "Checking if container '${{ inputs.container-name }}' is running..."
        docker ps -a | Select-String '${{ inputs.container-name }}'

    - name: Publish App to Container
      shell: pwsh
      run: |
        Write-Host "Publishing app to container..."
        $appPath = Get-ChildItem -Path "${{ github.workspace }}/Build_StagingDirectory" -Filter "*.app" | Select-Object -First 1
        if (-not $appPath) {
          Write-Host "Error: No .app file found in the staging directory."
          exit 1
        }
        Write-Host "Found app file: $($appPath.FullName)"

        $password = ConvertTo-SecureString $env:BC_PASSWORD -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential ($env:BC_USERNAME, $password)

        Publish-BcContainerApp -containerName "${{ inputs.container-name }}" -credential $credential -appFile $appPath.FullName -sync -install

    - name: Get Available Tests
      shell: pwsh
      run: |
        Write-Host "Fetching available tests from container using Get-TestsFromNavContainer..."
        Get-TestsFromNavContainer -containerName "${{ inputs.container-name }}" -testSuite "DEFAULT"

    - name: Run AL Tests
      shell: pwsh
      run: |
        Write-Host "Running AL tests using Run-TestsInNavContainer..."

        $password = ConvertTo-SecureString $env:BC_PASSWORD -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential ($env:BC_USERNAME, $password)

        $testResults = Run-TestsInNavContainer `
          -containerName "${{ inputs.container-name }}" `
          -testSuite "DEFAULT" `
          -credential $credential `
          -detailed `
          -tenant default

        if (-not $testResults) {
          Write-Host "::error::No test results found!"
          exit 1
        }

        Write-Host "âœ… Tests completed successfully."

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: al-test-results
        path: ${{ github.workspace }}/TestResults.xml
        retention-days: 30

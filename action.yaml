name: "AL Test Runner" 
description: "Runs AL unit tests on a Business Central container"

inputs:
  container-name:
    description: "Name of the Business Central container"
    required: true
  company-name:
    description: "Business Central company name to run tests in"
    required: false
    default: "CRONUS"
  test-suite-name:
    description: "Name of the test suite to run"
    required: false
    default: "DEFAULT"

runs:
  using: "composite"
  steps:
    - name: Install BcContainerHelper (PowerShell 5.1)
      shell: powershell
      run: |
        Write-Host "Installing BcContainerHelper module..."
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force
        Install-Module BcContainerHelper -Force -SkipPublisherCheck -AllowClobber
        Get-Module -ListAvailable BcContainerHelper
    
    - name: Run AL Tests in Container
      shell: pwsh
      run: |
        Write-Host "Running AL tests in container ${{ inputs.container-name }}..."
        
        try {
          $securePassword = ConvertTo-SecureString $env:BC_PASSWORD -AsPlainText -Force
          $credential = New-Object PSCredential($env:BC_USERNAME, $securePassword)
          $testResults = Run-TestsInBcContainer `
            -containerName "${{ inputs.container-name }}" `
            -companyName "${{ inputs.company-name }}" `
            -testSuite "${{ inputs.test-suite-name }}" `
            -testCodeunit "*" `
            -credential $credential `
            -EnableTaskScheduler:$false `
            -detailed
          
          # Test sonuçlarını XML dosyasına kaydedin
          $testResults | Export-Clixml -Path "${{ github.workspace }}/TestResults.xml"
          
          if ($testResults.TestResults.failures -gt 0) {
            Write-Host "::error::$($testResults.TestResults.failures) test(s) failed"
            exit 1
          }
          
          Write-Host "✅ All tests passed! Total: $($testResults.TestResults.tests), Failures: $($testResults.TestResults.failures), Time: $($testResults.TestResults.time) sec"
        }
        catch {
          Write-Host "::error::Test execution failed!"
          Write-Host "::error::$_"
          exit 1
        }
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: al-test-results
        path: "${{ github.workspace }}/TestResults.xml"
        retention-days: 30
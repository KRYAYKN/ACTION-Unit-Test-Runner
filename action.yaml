name: "AL Test Runner"
description: "Runs AL unit tests on a Business Central container with dynamic test suite detection"

inputs:
  container-name:
    description: "Name of the Business Central container"
    required: true
  BC_USERNAME:
    description: "Business Central username"
    required: true
  BC_PASSWORD:
    description: "Business Central password"
    required: true

runs:
  using: "composite"
  steps:
    - name: Install BcContainerHelper (PowerShell 5.1)
      shell: powershell
      run: |
        Write-Host "Installing BcContainerHelper module..."
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force
        Install-Module BcContainerHelper -Force -SkipPublisherCheck -AllowClobber
        Get-Module -ListAvailable BcContainerHelper

    - name: Check Container Status
      shell: pwsh
      run: |
        Write-Host "Checking if container '${{ inputs.container-name }}' is running..."
        docker ps -a | Select-String '${{ inputs.container-name }}'

    - name: Detect Test Suite
      shell: pwsh
      run: |
        Write-Host "Detecting test suite in container..."
        $testSuiteName = Invoke-ScriptInBcContainer -containerName "${{ inputs.container-name }}" -scriptblock {
            Import-Module BCAppTest
            $suites = Get-TestSuite -ServerInstance BC -Tenant default
            if ($suites) {
                $suites.Name
            } else {
                Write-Output "DEFAULT"
            }
        }

        if (-not $testSuiteName) {
          Write-Host "::error::No test suites found. Using DEFAULT test suite."
          $testSuiteName = "DEFAULT"
        }

        Write-Host "Detected Test Suite: $testSuiteName"
        echo "TEST_SUITE_NAME=$testSuiteName" >> $env:GITHUB_ENV

    - name: Run AL Tests
      shell: pwsh
      env:
        BC_USERNAME: ${{ inputs.BC_USERNAME }}
        BC_PASSWORD: ${{ inputs.BC_PASSWORD }}
      run: |
        Write-Host "Running AL tests using Run-TestsInBcContainer..."

        $securePassword = ConvertTo-SecureString $env:BC_PASSWORD -AsPlainText -Force
        $credential = New-Object PSCredential($env:BC_USERNAME, $securePassword)

        Write-Host "Executing tests with Run-TestsInBcContainer in suite: $env:TEST_SUITE_NAME"
        $testResults = Run-TestsInBcContainer `
          -containerName "${{ inputs.container-name }}" `
          -testSuite "$env:TEST_SUITE_NAME" `
          -testCodeunit "*" `
          -credential $credential `
          -detailed `
          -tenant default

        if (-not $testResults) {
          Write-Host "::error::No test results found! Please check if tests were executed correctly."
          exit 1
        }

        # Debug Test Results
        Write-Host "=== Test Results Debug ==="
        Write-Output $testResults | Format-List

        if ($testResults.TestResults.failures -gt 0) {
          Write-Host "::error::$($testResults.TestResults.failures) test(s) failed"
          exit 1
        }

        Write-Host "âœ… All tests passed! Total: $($testResults.TestResults.tests), Failures: $($testResults.TestResults.failures), Time: $($testResults.TestResults.time) sec"

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: al-test-results
        path: ${{ github.workspace }}/TestResults.xml
        retention-days: 30

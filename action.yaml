name: AL Unit Test Runner
description: Runs AL unit tests on a Business Central container and reports results

inputs:
  container-name:
    description: "Name of the Business Central container"
    required: true
  BC_USERNAME:
    description: "Business Central username"
    required: true
  BC_PASSWORD:
    description: "Business Central password"
    required: true
  Build_StagingDirectory:
    description: "Path to the build staging directory."
    required: true
runs:
  using: "composite"
  steps:
    - name: Install BcContainerHelper
      shell: powershell
      run: |
        Write-Host "Installing BcContainerHelper module..."
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force
        Install-Module BcContainerHelper -Force -SkipPublisherCheck -AllowClobber

    - name: Check Container Status
      shell: pwsh
      run: |
        docker ps -a | Select-String '${{ inputs.container-name }}'

    - name: Ensure Test Toolkit is Installed
      shell: pwsh
      run: |
        Invoke-ScriptInBcContainer -containerName "${{ inputs.container-name }}" -scriptblock {
          $testToolkit = Get-NAVAppInfo -ServerInstance BC | Where-Object { $_.Name -eq 'Test Runner' }
          if (-not $testToolkit) {
            Write-Host "⚠️ Test Toolkit not found. Installing..."
            Import-TestToolkitToBcContainer -containerName "${{ inputs.container-name }}"
            Write-Host "✅ Test Toolkit installed successfully."
          } else {
            Write-Host "✅ Test Toolkit is already installed."
          }
        }

    - name: Publish Test App
      shell: pwsh
      run: |
        $testAppPath = Join-Path "${{ inputs.Build_StagingDirectory }}" "test.app"
        if (-not (Test-Path $testAppPath)) {
          Write-Host "❌ test.app not found!"
          exit 1
        }
        $password = ConvertTo-SecureString "${{ inputs.BC_PASSWORD }}" -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential ("${{ inputs.BC_USERNAME }}", $password)

        Publish-BcContainerApp -containerName "${{ inputs.container-name }}" -credential $credential -appFile $testAppPath -sync -install -SkipVerification

    - name: Get Available Tests
      shell: pwsh
      run: |
        $password = ConvertTo-SecureString "${{ inputs.BC_PASSWORD }}" -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential ("${{ inputs.BC_USERNAME }}", $password)

        Get-TestsFromNavContainer -containerName "${{ inputs.container-name }}" -testSuite "DEFAULT" -credential $credential

    - name: Run AL Tests
      shell: pwsh
      run: |
        $password = ConvertTo-SecureString "${{ inputs.BC_PASSWORD }}" -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential ("${{ inputs.BC_USERNAME }}", $password)

        Get-TestsFromBcContainer -containerName "BUSINESSCENTRAL-FORMULA-ERP-CONTAINER" -testSuite "DEFAULT" -credential $credential | Format-Table -AutoSize
        $testResults = Run-TestsInBcContainer -containerName "${{ inputs.container-name }}" -credential $credential -detailed -tenant default -testCodeunitId 66601 -EnableTaskScheduler:$false

        if (-not $testResults) {
          Write-Host "::error::No test results found!"
          exit 1
        }

        Write-Host "✅ Tests completed successfully."

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: al-test-results
        path: ${{ github.workspace }}/TestResults.xml
        retention-days: 30
